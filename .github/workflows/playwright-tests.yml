name: Playwright Tests

on:
  # Run daily at 9 AM UTC
  schedule:
    - cron: '0 9 * * *'
  
  # Run after deployment (when main branch is pushed)
  push:
    branches: [ main, master ]
  
  # Run on pull requests
  pull_request:
    branches: [ main, master ]
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      test_env:
        description: 'Test Environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        # Run tests on multiple browsers
        browser: [chromium, firefox, webkit]
        
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Run Playwright tests
      run: npx playwright test --project=${{ matrix.browser }}
      env:
        # Add environment variables
        TEST_ENV: ${{ github.event.inputs.test_env || 'dev' }}
        CI: true
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.browser }}
        path: playwright-report/
        retention-days: 30
    
    - name: Upload test videos
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-videos-${{ matrix.browser }}
        path: test-results/
        retention-days: 7

  notify:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Send Slack notification
      if: failure()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#qa-alerts'
        text: 'Playwright tests failed! Check the logs for details.'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 